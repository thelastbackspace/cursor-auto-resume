!function(){console.log("Cursor Auto Resume: Running");let t=0,e=Date.now();const n=18e5;let o;function r(){e=Date.now(),console.log("Cursor Auto Resume: Timer reset")}function c(){const r=Date.now();if(r-e>n)return console.log("Cursor Auto Resume: 30 minutes elapsed, stopping auto-click"),void clearInterval(o);if(!(r-t<3e3)){const e=document.querySelector('section[data-markdown-raw*="stop the agent after"]');if(e){const n=e.querySelector('span.markdown-link[data-link*="composer.resumeCurrentChat"]');if(n&&"resume the conversation"===n.textContent.trim())return console.log('Clicking "resume the conversation" link (markdown section)'),n.click(),void(t=r)}const n=document.evaluate("//text()[contains(., 'stop the agent after') or contains(., 'Note: By default, we stop')]",document,null,XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,null);for(let e=0;e<n.snapshotLength;e++){const o=n.snapshotItem(e).parentElement;if(o&&o.textContent){const e=o.textContent;if(/stop the agent after \d+ tool calls/i.test(e)||e.includes("Note: By default, we stop")){const n=(o.closest("section")||o).querySelectorAll("a, span.markdown-link, [role=\"link\"], [data-link]");for(const e of n)if("resume the conversation"===e.textContent.trim())return console.log('Clicking "resume the conversation" link (fallback)'),e.click(),void(t=r)}}}const l=document.querySelector("div[class*='composer-bar']")?.closest("div[class*='full-input-box']");if(l){const e=[{errorText:"We're having trouble connecting to the model provider",buttonText:"Resume",logMessage:'Clicking "Resume" button for connection error.'},{errorText:"We're experiencing high demand for",buttonText:"Try again",logMessage:'Clicking "Try again" button for high demand error.'},{errorText:"Connection failed. If the problem persists, please check your internet connection",buttonText:"Try again",logMessage:'Clicking "Try again" button for connection failed error.'}];for(const n of e){const e=document.evaluate(`.//section[contains(@data-markdown-raw, "${n.errorText}")] | .//div[contains(., "${n.errorText}")] | .//span[contains(., "${n.errorText}")]`,l,null,XPathResult.ANY_UNORDERED_NODE_TYPE,null).singleNodeValue;if(e){const o=document.evaluate(`(.//div[contains(@class, 'anysphere-secondary-button')]//span[text()='${n.buttonText}']/.. | .//button[contains(., '${n.buttonText}')])[last()]`,l,null,XPathResult.ANY_UNORDERED_NODE_TYPE,null).singleNodeValue;if(o)return console.log(n.logMessage),o.click(),void(t=r)}}}}}window.click_reset=r,o=setInterval(c,1e3),c(),console.log("Cursor Auto Resume: Will stop after 30 minutes. Call click_reset() to reset timer.")}();